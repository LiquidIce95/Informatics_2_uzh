we start at the top left corner of the matrix, then we do row by row this gives us the invariant:

that every matrix entry above and to the left, have an entry of the helper function

so for each entry in the matrix M_{i,j} we know H_{i-1,j} and H_{i,j-1} which are the values 
of the helper function for the respective entry.

then if the value difference of |M_{i,j} - M_{i-1,j}| \leq 1 then H_{i,j} = H_{i-1,j}+1

otherwise if |M_{i,j} - M_{i,j-1}|\leq 1 then H_{i,j}= max(H_{i,j-1}+1,H_{i,j}}

we take the max in case the previous choice was better

otherwise H_{i,j}=1

so lets run this algorithm on table 3 matrix

1,1,2,3
2,3,4,4
1,1,2,5
2,2,1,1
3,3,4,5

so turns out we have to maximal paths to choose from, either we could store the solution 
int our first iteration or we could now reconstruct the path from the largest entry by simply 
choosing one number lower which must be a left or upper neighbour



